{"version":3,"sources":["../../src/models/Entry.js"],"names":["Schema","mongoose","entrySchema","date","Date","breakfast","Number","lunch","dinner","snacks","groceries","user","type","Types","ObjectId","ref","timestamps","methods","toJSON","id","_id","createdAt","updatedAt","validateEntry","entry","schema","Joi","number","min","max","allow","text","validate","Entry","model"],"mappings":";;;;;;;AAAA;;AACA;;;;AACA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,iBAAnB;AAEA,MAAMC,WAAW,GAAG,IAAIF,MAAJ,CAClB;AACEG,EAAAA,IAAI,EAAEC,IADR;AAEEC,EAAAA,SAAS,EAAEC,MAFb;AAGEC,EAAAA,KAAK,EAAED,MAHT;AAIEE,EAAAA,MAAM,EAAEF,MAJV;AAKEG,EAAAA,MAAM,EAAEH,MALV;AAMEI,EAAAA,SAAS,EAAEJ,MANb;AAOEK,EAAAA,IAAI,EAAE;AAAEC,IAAAA,IAAI,EAAEX,kBAASD,MAAT,CAAgBa,KAAhB,CAAsBC,QAA9B;AAAwCC,IAAAA,GAAG,EAAE;AAA7C;AAPR,CADkB,EAUlB;AAAEC,EAAAA,UAAU,EAAE;AAAd,CAVkB,CAApB;;AAaAd,WAAW,CAACe,OAAZ,CAAoBC,MAApB,GAA6B,YAAY;AACvC,SAAO;AACLC,IAAAA,EAAE,EAAE,KAAKC,GADJ;AAELjB,IAAAA,IAAI,EAAE,KAAKA,IAFN;AAGLE,IAAAA,SAAS,EAAE,KAAKA,SAHX;AAILE,IAAAA,KAAK,EAAE,KAAKA,KAJP;AAKLC,IAAAA,MAAM,EAAE,KAAKA,MALR;AAMLC,IAAAA,MAAM,EAAE,KAAKA,MANR;AAOLC,IAAAA,SAAS,EAAE,KAAKA,SAPX;AAQLW,IAAAA,SAAS,EAAE,KAAKA,SARX;AASLC,IAAAA,SAAS,EAAE,KAAKA,SATX;AAULX,IAAAA,IAAI,EAAE,KAAKA,IAAL,CAAUO,MAAV;AAVD,GAAP;AAYD,CAbD;;AAeO,MAAMK,aAAa,GAAIC,KAAD,IAAW;AACtC,QAAMC,MAAM,GAAG;AACbtB,IAAAA,IAAI,EAAEuB,aAAIvB,IAAJ,EADO;AAEbE,IAAAA,SAAS,EAAEqB,aAAIC,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,EAAxB,EAA4BC,KAA5B,CAAkC,IAAlC,CAFE;AAGbvB,IAAAA,KAAK,EAAEmB,aAAIC,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,EAAxB,EAA4BC,KAA5B,CAAkC,IAAlC,CAHM;AAIbtB,IAAAA,MAAM,EAAEkB,aAAIC,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,EAAxB,EAA4BC,KAA5B,CAAkC,IAAlC,CAJK;AAKbrB,IAAAA,MAAM,EAAEiB,aAAIC,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,EAAxB,EAA4BC,KAA5B,CAAkC,IAAlC,CALK;AAMbpB,IAAAA,SAAS,EAAEgB,aAAIC,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,EAAxB,EAA4BC,KAA5B,CAAkC,IAAlC,CANE;AAObC,IAAAA,IAAI,EAAEL,aAAIC,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,EAAxB;AAPO,GAAf;AASA,SAAOH,aAAIM,QAAJ,CAAaR,KAAb,EAAoBC,MAApB,CAAP;AACD,CAXM;;;;AAaP,MAAMQ,KAAK,GAAGhC,kBAASiC,KAAT,CAAe,OAAf,EAAwBhC,WAAxB,CAAd;;eAEe+B,K","sourcesContent":["import mongoose from 'mongoose';\nimport Joi from 'joi';\nconst { Schema } = mongoose;\n\nconst entrySchema = new Schema(\n  {\n    date: Date,\n    breakfast: Number,\n    lunch: Number,\n    dinner: Number,\n    snacks: Number,\n    groceries: Number,\n    user: { type: mongoose.Schema.Types.ObjectId, ref: 'User' },\n  },\n  { timestamps: true },\n);\n\nentrySchema.methods.toJSON = function () {\n  return {\n    id: this._id,\n    date: this.date,\n    breakfast: this.breakfast,\n    lunch: this.lunch,\n    dinner: this.dinner,\n    snacks: this.snacks,\n    groceries: this.groceries,\n    createdAt: this.createdAt,\n    updatedAt: this.updatedAt,\n    user: this.user.toJSON(),\n  };\n};\n\nexport const validateEntry = (entry) => {\n  const schema = {\n    date: Joi.date(),\n    breakfast: Joi.number().min(1).max(20).allow(null),\n    lunch: Joi.number().min(1).max(20).allow(null),\n    dinner: Joi.number().min(1).max(20).allow(null),\n    snacks: Joi.number().min(1).max(20).allow(null),\n    groceries: Joi.number().min(1).max(20).allow(null),\n    text: Joi.number().min(1).max(20),\n  };\n  return Joi.validate(entry, schema);\n};\n\nconst Entry = mongoose.model('Entry', entrySchema);\n\nexport default Entry;\n"],"file":"Entry.js"}